\documentclass[10pt]{article}
\usepackage[margin=1.0in]{geometry}
\usepackage[utf8]{inputenc}
\usepackage[parfill]{parskip}
\SweaveOpts{keep.source=TRUE} 

\title{POD Vignette}
\author{Daniel Bottomly}
%\VignetteIndexEntry{pod}
\begin{document}

\maketitle

\section{Introduction}

This package implements the outlier detection methods from Bottomly et al. In Press.  Specifically it implements the outlying degree approaches, Zscore and Rscore described in that paper and makes
them convieniently available either for basic matrices or expression-specific classes such as the \texttt{ExpressionSet}.

First, read in the data using an appropriate package such as \texttt{oligo}, \texttt{affy} or \texttt{XPS}.  Use of the \texttt{oligo} package is demonstrated below.

<<eval=TRUE, echo=TRUE>>=

library(pod)
library(oligo)
library(pd.huex.1.0.st.v2)

sampleNames <- c('09206', '09788', '09562', '09177', '09182', '09624', '08431', 'T119', '09076', '08419', '08118', '09190')
    filenames <- c('03A_A11H1_09206_432BD.CEL', '02A_A11H1_09788_432BD.CEL', '013A_A11H1_09562_432BD.CEL', '05A_A11H1_09177_432BD.CEL',
    '08A_A11H1_09182_432BD.CEL', '012A_A11H1_09624_432BD.CEL', '011A_A11H1_08431_432BD.CEL', '010A_A11H1_T119_432BD.CEL',
    '014A_A11H1_09076_432BD.CEL', '06A_A11H1_08419_432BD.CEL', '07A_A11H1_08118_432BD.CEL', '015A_A11H1_09190_432BD.CEL')
    
    cel.dir <- "/Users/bottomly/Desktop/github_projects/pod_vignette/432BD_CELS"
    
    affy.exprs <- read.celfiles(filenames=file.path(cel.dir, filenames), sampleNames=sampleNames, pkgname="pd.huex.1.0.st.v2")
    
    norm.eset <- rma(object=affy.exprs, background=TRUE, normalize=TRUE, subset=NULL, target="probeset")
@

Using our \texttt{norm.eset} object, we can now compute our outlier statistics, for instance the outlying degree, Zscore and Rscore as below.


<<>>=

norm.out.deg <- outlyingDegree(norm.eset, k=5)

norm.out.deg[1:5,1:5]

norm.zscore <- zScore(norm.eset, robust=FALSE)

norm.zscore[1:5,1:5]

norm.rscore <- zScore(norm.eset, robust=TRUE)

norm.rscore[1:5,1:5]

@

Similarly, we can compute these values using a plain matrix.

<<>>=

norm.exprs <- exprs(norm.eset)

norm.out.deg.mat <- outlyingDegree(norm.exprs, k=5)

all.equal(norm.out.deg, norm.out.deg.mat)

@


<<eval=TRUE>>=
sessionInfo()
@

\end{document}
